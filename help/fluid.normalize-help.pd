#N canvas 130 25 699 912 12;
#X obj 17 13 cnv 15 660 42 empty empty fluid.normalize 1 22 0 36 #4ba3fb #ffffff 0;
#X text 17 79 Normalize a FluidDataSet;
#X obj 509 60 fluid.referencelauncher fluid.normalize.html reference/normalize/;
#X text 17 109 Normalize a fluid.dataset or single point of data according to learnt minimum and maximum values.;
#X obj 455 807 cnv 15 225 87 empty empty More\ information 4 10 0 13 #e0e0e0 #404040 0;
#N canvas 1699 -807 448 179 loadsrc 0;
#X obj 16 83 soundfiler;
#X obj 16 19 loadbang;
#X msg 16 41 read -resize media/Tremblay-UW-ComplexDescent-M.wav help.n.src.1;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X restore 37 196 pd loadsrc;
#X obj 499 167 array define help.n.src.1;
#X obj 37 263 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 37 303 fluid.bufpitch -source help.n.src.1 -features help.n.features.1, f 37;
#X obj 379 197 clone fluid.multiarray 2 help.n.features.1;
#X text 310 299 Two channels of feature data. One pitch \, the other confidence, f 17;
#X obj 37 413 fluid.dataset help.n.raw.1, f 16;
#X obj 37 347 list;
#X obj 58 263 cnv 15 15 15 empty empty empty 20 12 0 14 #c6ffc7 #404040 0;
#X text 59 262 1) Analyse the pitch of a source buffer;
#X text 161 387 Turn the two channel array into a two column dataset., f 19;
#X obj 38 654 text define help.normalize.text.1;
#X f 23;
#X obj 37 557 fluid.ds2text help.n.raw.1 help.normalize.text.1, f 27;
#X obj 37 522 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 58 521 cnv 15 15 15 empty empty empty 20 12 0 14 #c6ffc7 #404040 0;
#X text 59 520 2) store dataset into a text object, f 23;
#X text 35 696 The raw analysis \, where each identifier is an analysis window of two columns. The first column is the pitch in Hz \, the second is the confidence in linear values., f 28;
#X obj 37 630 cnv 15 15 15 empty empty empty 20 12 0 14 #c6ffc7 #404040 0;
#X msg 467 345 fittransform help.n.raw.1 help.n.normalised.1, f 28;
#X obj 467 387 fluid.normalize;
#X msg 467 411 print;
#X obj 467 441 fluid.dataset help.n.normalised.1, f 19;
#X obj 346 553 fluid.ds2text help.n.normalised.1 help.normalize.text.1b, f 27;
#X obj 346 659 text define help.normalize.text.1b;
#X obj 468 303 cnv 15 15 15 empty empty empty 20 12 0 14 #c6ffc7 #404040 0;
#X text 469 302 4) Standardise the dataset of raw data, f 22;
#N canvas 316 25 703 792 visualising_standardisation 0;
#X obj 17 13 cnv 15 660 42 empty empty fluid.normalize 1 22 0 36 #4ba3fb #ffffff 0;
#X text 17 79 visualising normalisation;
#X obj 29 147 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 29 197 fluid.bufpitch -source help.n.src.1 -features help.n.features.1, f 37;
#X msg 29 269 \$2;
#X obj 29 241 list;
#X obj 29 297 list prepend frombuffer;
#X obj 29 321 list trim;
#X obj 50 147 cnv 15 15 15 empty empty empty 20 12 0 14 #c6ffc7 #404040 0;
#X text 51 146 1) Analyse the pitch of a source buffer, f 21;
#X obj 29 365 fluid.dataset help.n.raw.2, f 27;
#X obj 61 440 fluid.ds2text help.n.raw.2 help.n.raw.text, f 27;
#X obj 29 505 text define help.n.raw.text;
#N canvas 0 22 450 278 (subpatch) 0;
#X array n.visnorm-0 1780 float 2;
#X coords 0 1 1780 0 250 70 1 0 0;
#X restore 414 590 graph;
#N canvas 0 22 450 278 (subpatch) 0;
#X array n.visnorm-1 1780 float 2;
#X coords 0 1 1780 0 250 70 1 0 0;
#X restore 414 684 graph;
#X text 589 569 Pitch (Hz);
#X text 589 665 confidence;
#X obj 410 237 fluid.normalize;
#X obj 410 440 fluid.ds2text help.n.normalised.2 help.n.normalised.text, f 27;
#X obj 410 505 text define help.n.normalised.text;
#X obj 410 365 fluid.dataset help.n.normalised.2;
#X msg 410 200 fittransform help.n.raw.2 help.n.normalised.2, f 26;
#N canvas 1537 23 511 451 labels 0;
#X obj 36 76 loadbang;
#X obj 36 206 loadbang;
#X msg 52 99 \; n.vis-0 ylabel -20 0 20000;
#X msg 52 134 \; n.vis-1 ylabel -20 0 0.95;
#X msg 52 229 \; n.visnorm-0 ylabel -20 0 1;
#X msg 52 264 \; n.visnorm-1 ylabel -20 0 1;
#X connect 0 0 2 0;
#X connect 0 0 3 0;
#X connect 1 0 4 0;
#X connect 1 0 5 0;
#X restore 610 87 pd labels;
#N canvas 0 22 450 278 (subpatch) 0;
#X array n.vis-0 1780 float 2;
#X coords 0 20000 1780 0 250 70 1 0 0;
#X restore 52 590 graph;
#N canvas 72 777 450 278 (subpatch) 0;
#X array n.vis-1 1780 float 2;
#X coords 0 1 1780 0 250 70 1 0 0;
#X restore 53 684 graph;
#X text 228 570 Pitch (Hz);
#X text 228 663 confidence;
#X obj 29 392 route frombuffer;
#X obj 29 416 t b b;
#X obj 410 392 route frombuffer;
#X obj 411 147 cnv 15 15 15 empty empty empty 20 12 0 14 #c6ffc7 #404040 0;
#X text 412 146 2) Standardise the dataset of raw data, f 21;
#X msg 15 480 tobuffer n.vis;
#X msg 410 335 tobuffer n.visnorm;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 4 0;
#X connect 6 0 7 0;
#X connect 7 0 10 0;
#X connect 10 0 27 0;
#X connect 17 0 33 0;
#X connect 20 0 29 0;
#X connect 21 0 17 0;
#X connect 27 0 28 0;
#X connect 28 0 32 0;
#X connect 28 1 11 0;
#X connect 29 0 18 0;
#X connect 32 0 10 0;
#X connect 33 0 20 0;
#X restore 461 827 pd visualising_standardisation;
#N canvas 81 25 1359 792 comparing_scalers 0;
#X obj 17 13 cnv 15 660 42 empty empty fluid.normalize 1 22 0 36 #4ba3fb #ffffff 0;
#X text 17 79 Comparing the shape of scalers;
#N canvas -221 -807 448 179 loadsrc 0;
#X obj 16 83 soundfiler;
#X obj 16 19 loadbang;
#X msg 16 41 read -resize media/Olencki-TenTromboneLongTones-M.wav help.n.src.3;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X restore 33 166 pd loadsrc;
#X obj 112 166 array define help.n.src.3;
#X obj 33 247 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 33 319 list;
#X obj 33 412 fluid.dataset help.n.scalercomparison.in, f 43;
#X obj 33 482 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 33 507 fluid.ds2text help.n.scalercomparison.in help.normalize.text.3, f 27;
#X obj 33 566 text define help.normalize.text.3;
#X f 23;
#X obj 1025 184 fluid.normalize;
#X text 57 481 save dataset in text;
#X text 202 574 <- open to see data, f 10;
#X msg 1025 207 print;
#X obj 1025 230 fluid.dataset help.n.scalercomparison.norm, f 31;
#X msg 1025 147 fittransform help.n.scalercomparison.in help.n.scalercomparison.norm;
#X obj 1025 307 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X text 1047 306 save dataset in text;
#X obj 1025 332 fluid.ds2text help.n.scalercomparison.norm help.normalize.text.norm, f 31;
#X obj 1010 387 text define help.normalize.text.norm;
#X obj 1024 536 fluid.plotter 300 300 1 0 empty empty;
#X msg 1024 507 setpoints help.normalize.text.norm;
#X msg 715 207 print;
#X obj 715 307 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X text 737 306 save dataset in text;
#X obj 714 535 fluid.plotter 300 300 1 0 empty empty;
#X msg 405 207 print;
#X obj 405 307 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 405 535 fluid.plotter 300 300 1 0 empty empty;
#X msg 405 147 fittransform help.n.scalercomparison.in help.n.scalercomparison.robust;
#X obj 405 230 fluid.dataset help.n.scalercomparison.robust, f 34;
#X obj 405 332 fluid.ds2text help.n.scalercomparison.robust help.normalize.text.robust, f 35;
#X obj 415 384 text define help.normalize.text.robust;
#X msg 405 507 setpoints help.normalize.text.robust;
#X msg 715 147 fittransform help.n.scalercomparison.in help.n.scalercomparison.std;
#X obj 715 230 fluid.dataset help.n.scalercomparison.std, f 31;
#X obj 715 332 fluid.ds2text help.n.scalercomparison.std help.normalize.text.std, f 30;
#X obj 725 384 text define help.normalize.text.std;
#X msg 714 507 setpoints help.normalize.text.std;
#X obj 405 184 fluid.robustscale;
#X obj 715 184 fluid.standardize;
#X obj 52 247 cnv 15 15 15 empty empty empty 20 12 0 14 #c6ffc7 #404040 0;
#X text 53 246 1) Analyse the pitch of a source buffer;
#X obj 404 486 cnv 15 15 15 empty empty empty 20 12 0 14 #c6ffc7 #404040 0;
#X obj 406 118 cnv 15 15 15 empty empty empty 20 12 0 14 #c6ffc7 #404040 0;
#X text 407 117 2) send messages to rescale the data;
#X text 405 485 4) click to plot;
#X obj 426 307 cnv 15 15 15 empty empty empty 20 12 0 14 #c6ffc7 #404040 0;
#X text 427 306 3) save dataset in text;
#X text 719 850 Standardise produces a similar shape to the robust scaler. Notice how outliers still pull the entire shape such that centrally located data is still warped toward the outliers., f 40;
#X text 1029 850 Normalise retains the exact same shape as the original data but remaps the extrema between 0 and 1 in both dimensions., f 41;
#X text 409 850 Robust scaling keeps more of the data centred around 0 in both dimensions compared to the standardised output., f 41;
#X text 409 897 However \, notice how lots of data is "off the plot" \, because samples outside the IQR are pushed further from those that are., f 41;
#X text 409 959 This makes it a scaler that is "robust" against outliers \, compared to say normalisation or standardisation., f 41;
#X msg 1277 512 range \$1 \$2;
#X obj 33 267 fluid.bufspectralshape -source help.n.src.3 -select centroid flatness, f 25;
#X msg 33 345 frombuffer \$2;
#N canvas 299 350 450 300 format 0;
#X obj 37 37 inlet;
#X obj 38 69 t f f;
#X obj 38 93 * -1;
#X obj 38 117 pack f f;
#X obj 38 141 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 3 1;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X restore 1277 488 pd format;
#X floatatom 1277 467 5 0 0 0 - - - 0;
#N canvas 63 88 450 300 init 0;
#X obj 35 24 loadbang;
#X msg 35 66 10;
#X obj 35 45 del 1;
#X obj 35 90 outlet;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 1 0;
#X restore 1277 446 pd init;
#X connect 4 0 55 0;
#X connect 5 0 56 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 10 0 13 0;
#X connect 13 0 14 0;
#X connect 15 0 10 0;
#X connect 16 0 18 0;
#X connect 21 0 20 0;
#X connect 22 0 35 0;
#X connect 23 0 36 0;
#X connect 26 0 30 0;
#X connect 27 0 31 0;
#X connect 29 0 39 0;
#X connect 33 0 28 0;
#X connect 34 0 40 0;
#X connect 38 0 25 0;
#X connect 39 0 26 0;
#X connect 40 0 22 0;
#X connect 54 0 20 0;
#X connect 54 0 28 0;
#X connect 54 0 25 0;
#X connect 55 0 5 0;
#X connect 56 0 6 0;
#X connect 57 0 54 0;
#X connect 58 0 57 0;
#X connect 59 0 58 0;
#X restore 461 849 pd comparing_scalers;
#X obj 346 518 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 345 636 cnv 15 15 15 empty empty empty 20 12 0 14 #c6ffc7 #404040 0;
#X obj 368 518 cnv 15 15 15 empty empty empty 20 12 0 14 #c6ffc7 #404040 0;
#X text 369 517 5) store dataset into a text object, f 23;
#X text 337 691 The normalised analysis. Notice that it's the exact same "shape" as the raw data but the values are in a different range now. Both of the scales for pitch and confidence are now between 0 and 1 \, meaning they are more comparable., f 48;
#X msg 37 375 frombuffer \$2;
#X obj 461 872 note_on_automatic_datasets;
#X text 346 635 6) click 'text' to see data;
#X text 38 629 3) click 'text' to see data;
#X connect 7 0 8 0;
#X connect 8 0 12 0;
#X connect 12 0 38 0;
#X connect 18 0 17 0;
#X connect 23 0 24 0;
#X connect 24 0 25 0;
#X connect 25 0 26 0;
#X connect 33 0 27 0;
#X connect 38 0 11 0;
